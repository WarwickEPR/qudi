# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import hardware.swabian_instruments.pulse_streamer_pb2 as pulse__streamer__pb2


class PulseStreamerStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.reset = channel.unary_unary(
        '/pulse_streamer.PulseStreamer/reset',
        request_serializer=pulse__streamer__pb2.VoidMessage.SerializeToString,
        response_deserializer=pulse__streamer__pb2.PulseStreamerReply.FromString,
        )
    self.constant = channel.unary_unary(
        '/pulse_streamer.PulseStreamer/constant',
        request_serializer=pulse__streamer__pb2.PulseMessage.SerializeToString,
        response_deserializer=pulse__streamer__pb2.PulseStreamerReply.FromString,
        )
    self.forceFinal = channel.unary_unary(
        '/pulse_streamer.PulseStreamer/forceFinal',
        request_serializer=pulse__streamer__pb2.VoidMessage.SerializeToString,
        response_deserializer=pulse__streamer__pb2.PulseStreamerReply.FromString,
        )
    self.stream = channel.unary_unary(
        '/pulse_streamer.PulseStreamer/stream',
        request_serializer=pulse__streamer__pb2.SequenceMessage.SerializeToString,
        response_deserializer=pulse__streamer__pb2.PulseStreamerReply.FromString,
        )
    self.startNow = channel.unary_unary(
        '/pulse_streamer.PulseStreamer/startNow',
        request_serializer=pulse__streamer__pb2.VoidMessage.SerializeToString,
        response_deserializer=pulse__streamer__pb2.PulseStreamerReply.FromString,
        )
    self.setTrigger = channel.unary_unary(
        '/pulse_streamer.PulseStreamer/setTrigger',
        request_serializer=pulse__streamer__pb2.TriggerMessage.SerializeToString,
        response_deserializer=pulse__streamer__pb2.PulseStreamerReply.FromString,
        )
    self.rearm = channel.unary_unary(
        '/pulse_streamer.PulseStreamer/rearm',
        request_serializer=pulse__streamer__pb2.VoidMessage.SerializeToString,
        response_deserializer=pulse__streamer__pb2.PulseStreamerReply.FromString,
        )
    self.selectClock = channel.unary_unary(
        '/pulse_streamer.PulseStreamer/selectClock',
        request_serializer=pulse__streamer__pb2.ClockMessage.SerializeToString,
        response_deserializer=pulse__streamer__pb2.PulseStreamerReply.FromString,
        )
    self.isStreaming = channel.unary_unary(
        '/pulse_streamer.PulseStreamer/isStreaming',
        request_serializer=pulse__streamer__pb2.VoidMessage.SerializeToString,
        response_deserializer=pulse__streamer__pb2.PulseStreamerReply.FromString,
        )
    self.hasSequence = channel.unary_unary(
        '/pulse_streamer.PulseStreamer/hasSequence',
        request_serializer=pulse__streamer__pb2.VoidMessage.SerializeToString,
        response_deserializer=pulse__streamer__pb2.PulseStreamerReply.FromString,
        )
    self.hasFinished = channel.unary_unary(
        '/pulse_streamer.PulseStreamer/hasFinished',
        request_serializer=pulse__streamer__pb2.VoidMessage.SerializeToString,
        response_deserializer=pulse__streamer__pb2.PulseStreamerReply.FromString,
        )
    self.getFirmwareVersion = channel.unary_unary(
        '/pulse_streamer.PulseStreamer/getFirmwareVersion',
        request_serializer=pulse__streamer__pb2.VoidMessage.SerializeToString,
        response_deserializer=pulse__streamer__pb2.PulseStreamerStringReply.FromString,
        )
    self.getSerial = channel.unary_unary(
        '/pulse_streamer.PulseStreamer/getSerial',
        request_serializer=pulse__streamer__pb2.GetSerialMessage.SerializeToString,
        response_deserializer=pulse__streamer__pb2.PulseStreamerStringReply.FromString,
        )


class PulseStreamerServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def reset(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def constant(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def forceFinal(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def stream(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def startNow(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def setTrigger(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def rearm(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def selectClock(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def isStreaming(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def hasSequence(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def hasFinished(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def getFirmwareVersion(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def getSerial(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_PulseStreamerServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'reset': grpc.unary_unary_rpc_method_handler(
          servicer.reset,
          request_deserializer=pulse__streamer__pb2.VoidMessage.FromString,
          response_serializer=pulse__streamer__pb2.PulseStreamerReply.SerializeToString,
      ),
      'constant': grpc.unary_unary_rpc_method_handler(
          servicer.constant,
          request_deserializer=pulse__streamer__pb2.PulseMessage.FromString,
          response_serializer=pulse__streamer__pb2.PulseStreamerReply.SerializeToString,
      ),
      'forceFinal': grpc.unary_unary_rpc_method_handler(
          servicer.forceFinal,
          request_deserializer=pulse__streamer__pb2.VoidMessage.FromString,
          response_serializer=pulse__streamer__pb2.PulseStreamerReply.SerializeToString,
      ),
      'stream': grpc.unary_unary_rpc_method_handler(
          servicer.stream,
          request_deserializer=pulse__streamer__pb2.SequenceMessage.FromString,
          response_serializer=pulse__streamer__pb2.PulseStreamerReply.SerializeToString,
      ),
      'startNow': grpc.unary_unary_rpc_method_handler(
          servicer.startNow,
          request_deserializer=pulse__streamer__pb2.VoidMessage.FromString,
          response_serializer=pulse__streamer__pb2.PulseStreamerReply.SerializeToString,
      ),
      'setTrigger': grpc.unary_unary_rpc_method_handler(
          servicer.setTrigger,
          request_deserializer=pulse__streamer__pb2.TriggerMessage.FromString,
          response_serializer=pulse__streamer__pb2.PulseStreamerReply.SerializeToString,
      ),
      'rearm': grpc.unary_unary_rpc_method_handler(
          servicer.rearm,
          request_deserializer=pulse__streamer__pb2.VoidMessage.FromString,
          response_serializer=pulse__streamer__pb2.PulseStreamerReply.SerializeToString,
      ),
      'selectClock': grpc.unary_unary_rpc_method_handler(
          servicer.selectClock,
          request_deserializer=pulse__streamer__pb2.ClockMessage.FromString,
          response_serializer=pulse__streamer__pb2.PulseStreamerReply.SerializeToString,
      ),
      'isStreaming': grpc.unary_unary_rpc_method_handler(
          servicer.isStreaming,
          request_deserializer=pulse__streamer__pb2.VoidMessage.FromString,
          response_serializer=pulse__streamer__pb2.PulseStreamerReply.SerializeToString,
      ),
      'hasSequence': grpc.unary_unary_rpc_method_handler(
          servicer.hasSequence,
          request_deserializer=pulse__streamer__pb2.VoidMessage.FromString,
          response_serializer=pulse__streamer__pb2.PulseStreamerReply.SerializeToString,
      ),
      'hasFinished': grpc.unary_unary_rpc_method_handler(
          servicer.hasFinished,
          request_deserializer=pulse__streamer__pb2.VoidMessage.FromString,
          response_serializer=pulse__streamer__pb2.PulseStreamerReply.SerializeToString,
      ),
      'getFirmwareVersion': grpc.unary_unary_rpc_method_handler(
          servicer.getFirmwareVersion,
          request_deserializer=pulse__streamer__pb2.VoidMessage.FromString,
          response_serializer=pulse__streamer__pb2.PulseStreamerStringReply.SerializeToString,
      ),
      'getSerial': grpc.unary_unary_rpc_method_handler(
          servicer.getSerial,
          request_deserializer=pulse__streamer__pb2.GetSerialMessage.FromString,
          response_serializer=pulse__streamer__pb2.PulseStreamerStringReply.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'pulse_streamer.PulseStreamer', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
