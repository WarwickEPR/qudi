Updating Anaconda:

The Python package environment. The win10-64 config file under tools _should_ be up to date
with requirements from upstream and presumably updated in their CI testing. However I've had
trouble with updates sometimes. The package numbering ranges _should_ be safe though so you
can also open a CMD shell and run:

conda update --prefix=c:\Users\Confocal\Anaconda3 anaconda

which will attempt to find the latest complaint set of packages.

I'm not sure if after initial installation the Anaconda environment config
is updated so slow changes like repositories/channels may not be updated.
Cleanest way might be a "fresh" installation.


My way is to skip the upstream install scripts as we have a working conda installation for the tools. Make/update an environment(via cmd or bash):

conda create -n qudi
source activate qudi

# This sets the environment of the current shell to select the Python instance
conda env update --file conda-env-win10-64bit-qt5.yml

If we need other modules to support our additions, then by preference install them using conda and update the .yml source file to track the requirement.

Should be merged into the local package list, but to add missing packages:

conda install -n qudi grpcio grpcio-tools dill

or if from PIP

pip install <X>

and manually add to the yml file



Updating beyond upstream
------------------------

If you need newer libraries or a newer python you can update with

conda update --all python=3.7

(The python argument constrains the version - otherwise this would go straight to 3.8)

You then need to export and check in another yml file to allow this to be replicated

conda-env export > pkg.yml
